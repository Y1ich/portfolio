
#include <iostream>
#include <windows.h>
#include <fstream>
#include <iomanip>
using namespace std;
ofstream fout;
ifstream fin;
struct ecs {
	char name[20];		//№ зачет книжки
	char famil[50];		//Фамилия И.О.
	char grup[20];		//Название группы
	int vstup;	//Сред.вступ.балл
	char stip[100];	//Размер стипендии
};
ecs B[10];		//объявляется массив из 10 структур типа ecs
char K[13] = "Students.txt";
char sh[][256] =
{ "                                   Студенты факультета ",
	"|==============|=============|===========|=======================|======================|",
	"|№ зачет книжки| Фамилия И.О.|Название гр|    Сред.вступ.балл    |   Размер стипендии   |",
	"|==============|=============|===========|=======================|======================|",
	"|--------------|-------------|-----------|-----------------------|----------------------|"
};
double sum; //переменная для суммарной стоимости всех экскурсий

void filtr(char* str)//Удаление пробелов вначале и в конце строки - параметра
{
	int x;
	int xl = 0, // номер первого символа строки
		xr = strlen(str) - 1; //номер последнего символа строки
	while (str[xl] == '  ')  xl++;
	while (str[xr] == '  ') xr--;
	for (x = xl; x <= xr; x++)
		str[x - xl] = str[x];
	str[x - xl] = '\0';
}
void psh()//Вывод строк шапки таблицы
{
	for (int i = 0; i < 4; i++)
		fout << sh[i] << endl;
}

int number(char* K)//Определение количества записей в файле данных
{
	int n = 0;			// счетчик записей;
	char T[255];		// массив буфер;
	fin.open(K);		//открытие файла данных;
	if (!fin) {
		cout << "Ошибка при открытии файла данных";
		system("pause");
		exit(0);
	}
	while (!fin.eof()) {			//пока не достигли конца файла данных
		fin.getline(T, 255); n++;  //считываем строку файла, увеличиваем n
	}
	fin.close();	 // закрываем файл данных;
	return n;//возвращаем количество строк файла;
}

void poisk(ecs* p, int n)
{
	char name[20];			// строка для поискового признака;
	fin.open("poisk.txt");	//открытие файла данных для поиска;
	if (!fin)
	{
		cout << "Ошибка открытия файла данных для поиска";
		system("pause"); exit(0);
	}
	fout << "\n\n Поиск по фамилии \n";
	while (!fin.eof()) {		 // пока не конец файла;
		fin.getline(name, 20); //считываем из файла поисковый признак;
		filtr(name);
		if (!strcmp(name, "")) {		//если это пустая строка
			fout << "\nНет данных";
			continue;                  //к следующей итерации цикла while;
		}
		//в противном случае
		for (int i = 0; i < n; i++) //перебираем структуры из массива структур
			if (strcmp(p[i].famil, name) == 0) //если есть совпадение
			{
				fout << "\n|" << setw(10) << B[i].name << '|' << setw(8) << B[i].famil
					<< '|' << setw(9) << B[i].grup << '|' << setw(14) << B[i].vstup
					<< '|' << setw(13) << B[i].stip << '|';
				goto m;
			}
		//если перебрали все структуры массива, и совпадения не было
		fout << "\n Зачетка " << name << " не найдена";
	m:;
	}
	fin.close();
	cout << endl;
	int s = 0, k = 0, sr = 0;
	for (int i = 0; i < n; i++) //перебираем структуры из массива структур
		//if (p[i].vstup > max)
	{
		s += p[i].vstup;
		k += 1;
		sr = s / k;
	}
	fout << "\n\n Средний балл студентов: " << sr << " " << endl;
	fin.close();
}

//вод данных из файла и заполнение массива структур
void vvod(ecs B[10], int n, double& sum, char* K)
{
	/*параметры: 1) массив структур, 2) количество записей в файле данных,
	3) ссылка для передачи суммарной стоимости, 4) строка - имя файла данных*/
	int i; sum = 0;
	char T[80];			   //массив буфер;
	fin.open(K);		   //открытие файла данных;
	if (!fin) {
		cout << "Ошибка при открытии файла данных";
		system("pause"); exit(0);
	}
	for (i = 0; i < n; i++) {	//цикл считывания данных из файла в массив
		fin.get(B[i].name, 15); filtr(B[i].name); //№ зачет книжки
		fin >> B[i].famil >> B[i].grup >> B[i].vstup; //считывается ФИО, название группы, сред.вступ.балл
		fin.getline(B[i].stip, 99); filtr(B[i].stip); //Размер стипендии
		sum += B[i].vstup;	// подсчитывается суммарный балл;
	}
	fin.close();
}

void vivod(ecs B[10], int n)//Вывод массива структур
{
	int i;
	for (i = 0; i < n; i++)
		fout << '|' << setw(14) << B[i].name << '|' << setw(13) << B[i].famil << '|'
		<< setw(11) << B[i].grup << '|' << setw(23) << B[i].vstup << '|' << setw(22)
		<< B[i].stip << '|' << endl;
	fout << sh[1] << endl << "Суммарный балл студентов: " << sum << endl;
}

int main()
{
	setlocale(LC_ALL, "Russian");
	SetConsoleCP(1251);
	SetConsoleOutputCP(1251);
	fout.open("res2.txt");		// создание и открытие файла результатов;
	if (!fout) { cout << "Ошибка открытия файла результатов"; exit(0); }
	int n = number(K);		//количество записей в файле;
	vvod(B, n, sum, K);
	psh();
	vivod(B, n);
	poisk(B, n);
	fout.close();
	return 0;
}

